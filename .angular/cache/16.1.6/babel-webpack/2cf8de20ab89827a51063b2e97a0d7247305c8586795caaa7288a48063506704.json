{"ast":null,"code":"import _defineProperty from \"/sandbox/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { NodeService } from '../../service/nodeservice';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/nodeservice\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/treeselect\";\nclass TreeSelectCheckboxDemo {\n  constructor(nodeService) {\n    _defineProperty(this, \"nodeService\", void 0);\n    _defineProperty(this, \"nodes\", void 0);\n    _defineProperty(this, \"selectedNodes\", void 0);\n    this.nodeService = nodeService;\n    this.nodeService.getFiles().then(files => this.nodes = files);\n  }\n}\n_defineProperty(TreeSelectCheckboxDemo, \"\\u0275fac\", function TreeSelectCheckboxDemo_Factory(t) {\n  return new (t || TreeSelectCheckboxDemo)(i0.ɵɵdirectiveInject(i1.NodeService));\n});\n_defineProperty(TreeSelectCheckboxDemo, \"\\u0275cmp\", /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TreeSelectCheckboxDemo,\n  selectors: [[\"tree-select-checkbox-demo\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[1, \"card\", \"flex\", \"justify-content-center\"], [\"containerStyleClass\", \"w-full\", \"display\", \"chip\", \"selectionMode\", \"checkbox\", \"placeholder\", \"Select Item\", 1, \"w-full\", \"md:w-20rem\", 3, \"ngModel\", \"options\", \"metaKeySelection\", \"ngModelChange\"]],\n  template: function TreeSelectCheckboxDemo_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-treeSelect\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TreeSelectCheckboxDemo_Template_p_treeSelect_ngModelChange_1_listener($event) {\n        return ctx.selectedNodes = $event;\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedNodes)(\"options\", ctx.nodes)(\"metaKeySelection\", false);\n    }\n  },\n  dependencies: [i2.NgControlStatus, i2.NgModel, i3.TreeSelect],\n  encapsulation: 2\n}));\nexport { TreeSelectCheckboxDemo };","map":{"version":3,"names":["NodeService","TreeSelectCheckboxDemo","constructor","nodeService","_defineProperty","getFiles","then","files","nodes","i0","ɵɵdirectiveInject","i1","selectors","decls","vars","consts","template","TreeSelectCheckboxDemo_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","TreeSelectCheckboxDemo_Template_p_treeSelect_ngModelChange_1_listener","$event","selectedNodes","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/sandbox/src/app/demo/tree-select-checkbox-demo.ts","/sandbox/src/app/demo/tree-select-checkbox-demo.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NodeService } from '../../service/nodeservice';\n\n@Component({\n    selector: 'tree-select-checkbox-demo',\n    templateUrl: './tree-select-checkbox-demo.html'\n})\nexport class TreeSelectCheckboxDemo {\n    nodes!: any[];\n\n    selectedNodes: any;\n\n    constructor(private nodeService: NodeService) {\n        this.nodeService.getFiles().then((files) => (this.nodes = files));\n    }\n}","<div class=\"card flex justify-content-center\">\n    <p-treeSelect class=\"w-full md:w-20rem\" containerStyleClass=\"w-full\" [(ngModel)]=\"selectedNodes\" [options]=\"nodes\" display=\"chip\" [metaKeySelection]=\"false\" selectionMode=\"checkbox\" placeholder=\"Select Item\"></p-treeSelect>\n</div>"],"mappings":";AACA,SAASA,WAAW,QAAQ,2BAA2B;;;;;AAEvD,MAIaC,sBAAsB;EAK/BC,YAAoBC,WAAwB;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAxB,KAAAD,WAAW,GAAXA,WAAW;IAC3B,IAAI,CAACA,WAAW,CAACE,QAAQ,EAAE,CAACC,IAAI,CAAEC,KAAK,IAAM,IAAI,CAACC,KAAK,GAAGD,KAAM,CAAC;EACrE;;gBAPSN,sBAAsB,e;mBAAtBA,sBAAsB,EAAAQ,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAX,WAAA;AAAA;AAAAI,eAAA,CAAtBH,sBAAsB,e;QAAtBA,sBAAsB;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPnCT,EAAA,CAAAW,cAAA,aAA8C;MAC2BX,EAAA,CAAAY,UAAA,2BAAAC,sEAAAC,MAAA;QAAA,OAAAJ,GAAA,CAAAK,aAAA,GAAAD,MAAA;MAAA,EAA2B;MAAgHd,EAAA,CAAAgB,YAAA,EAAe;;;MAA1JhB,EAAA,CAAAiB,SAAA,GAA2B;MAA3BjB,EAAA,CAAAkB,UAAA,YAAAR,GAAA,CAAAK,aAAA,CAA2B,YAAAL,GAAA,CAAAX,KAAA;;;;;;SDMvFP,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}